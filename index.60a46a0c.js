const e=new class{async fetchTrendingUrl(){const e=await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=83cba2c85d0df477852b094af9fbdddb&page=${this.page}`);return this.incrementPage(),await e.json()}async fetchSearch(){console.log(this.searchValue);const e=await fetch(`https://api.themoviedb.org/3/search/movie?api_key=83cba2c85d0df477852b094af9fbdddb&query=${this.searchValue}&page=${this.page}`);return console.log(),this.incrementPage(),console.log(e),await e.json()}async fetchGenres(){const e=await fetch("https://api.themoviedb.org/3/genre/movie/list?api_key=83cba2c85d0df477852b094af9fbdddb&language=en-US");return await e.json()}async fetchMovieById(){const e=await fetch(`https://api.themoviedb.org/3/movie/${this.idMovie}?api_key=83cba2c85d0df477852b094af9fbdddb`);return await e.json()}incrementPage(){this.page+=1}resetPage(){this.page=1}get input(){return this.searchValue}set input(e){this.searchValue=e}get id(){return this.idMovie}set id(e){this.idMovie=e}get obj(){return this.objForLocalStorage}set obj(e){this.objForLocalStorage=e}constructor(){this.searchValue="",this.page=1,this.idMovie="",this.objForLocalStorage={}}},t={form:document.querySelector(".search-form"),gallery:document.querySelector(".gallery-home-list"),modalWindow:document.querySelector(".backdrop"),w:document.querySelector('[data-action="w"]'),q:document.querySelector('[data-action="q"]')};async function a(){e.resetPage();try{const a=await e.fetchTrendingUrl();n(a,await e.fetchGenres()),t.gallery.addEventListener("click",s)}catch(e){console.log(e)}}function n(e,a){const n=a.genres,s=e.results.map((({id:e,genre_ids:t,original_title:a,release_date:s,poster_path:i,vote_average:o})=>`<li class="gallery-item" data-id="${e}">\n  <a class="gallery__link" href="">\n    <div class="film-card">\n      <img\n        src="https://image.tmdb.org/t/p/w500${i}"\n        alt="${a}"\n        loading="lazy"\n        class="film-card__image"\n      />\n      <div class="card">\n        <p class="card__name">${a}</p>\n        <div class="card__text">\n          <p class="card__genre">${n.filter((e=>t.includes(e.id))).map((e=>e.name))}</p>\n          <p class="card__year">${new Date(s).getFullYear()}</p>\n        </div>\n      </div>\n    </div>\n  </a>\n</li>`)).join("");t.gallery.innerHTML=s}function s(a){a.preventDefault(),t.modalWindow.classList.remove("backdrop--hidden");const n=a.target;e.id=n.closest(".gallery-item").dataset.id,async function(){try{!function(a){e.obj=a;const n="https://image.tmdb.org/t/p/",s="w500",{genres:l,original_title:c,poster_path:r,vote_average:d,vote_count:m,popularity:u,overview:g}=a;let p=l.map((e=>e.name)),h=d.toFixed(1),_=u.toFixed(1);const v=`<div class="card-modal">\n    <button type="button" data-action="modal-close" class="modal-close">\n      <img\n        class="modal-close__icon"\n        src="./images/card-modal-img/modal-btn-close.svg"\n        alt="cross"\n        width="30"\n        height="30"\n      />\n    </button>\n    <div class="card-modal__container">\n      <div class="card-modal__img">\n        <picture>\n          <source\n            srcset="\n              ${n}${s}${r} 1x,\n              ${n}${s}${r} 2x\n            "\n            media="(min-width: 1200px)"\n          />\n          <source\n            srcset="\n              ${n}${s}${r} 1x,\n              ${n}${s}${r} 2x\n            "\n            media="(min-width: 768px)"\n          />\n          <source\n            srcset="\n              ${n}${s}${r} 1x,\n              ${n}${s}${r} 2x\n            "\n            media="(min-width: 320px)"\n          />\n          <img src="${n}${s}${r}" alt="film" />\n        </picture>\n      </div>\n      <div class="modal-meta">\n        <h2 class="modal-heading">${c}</h2>\n        <div class="meta-container">\n          <ul class="list feature__list">\n            <li class="feature__item">\n              <span class="meta__feature">Vote / Votes</span>\n            </li>\n            <li class="feature__item">\n              <span class="meta__feature">Popularity</span>\n            </li>\n            <li class="feature__item">\n              <span class="meta__feature">Original Title</span>\n            </li>\n            <li class="feature__item">\n              <span class="meta__feature">Genre</span>\n            </li>\n          </ul>\n          <ul class="list value__list">\n            <li class="value__item">\n              <div>\n                <span class="vote-votes">${h}</span> /\n                <span class="vote-votes">${m}</span>\n              </div>\n            </li>\n            <li class="value__item">\n              <span class="meta__value">${_}</span>\n            </li>\n            <li class="value__item">\n              <span class="meta__value">${c}</span>\n            </li>\n            <li class="value__item">\n              <span class="meta__value">${p}</span>\n            </li>\n          </ul>\n        </div>\n        <h3 class="modal-meta__title">About</h3>\n        <p class="modal-meta__discription">${g}</p>\n        <ul class="list modal-btn__list">\n          <li class="modal-btn__item">\n            <button class="modal-btn" data-action="watched" type="button">add to watched</button>\n          </li>\n          <li class="modal-btn__item">\n            <button class="modal-btn" data-action="queue" type="button">add to queue</button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>`;t.modalWindow.innerHTML=v,function(){document.querySelector('[data-action="modal-close"]').addEventListener("click",(()=>{t.modalWindow.classList.add("backdrop--hidden"),t.modalWindow.innerHTML=""}));document.querySelector('[data-action="watched"]').addEventListener("click",i);document.querySelector('[data-action="queue"]').addEventListener("click",o)}()}(await e.fetchMovieById())}catch(e){console.log(e)}}()}function i(){const t=localStorage.getItem("watched");try{const a=t?JSON.parse(t):[];a.push(e.obj);const n=JSON.stringify(a);console.log(n),localStorage.setItem("watched",n)}catch(e){console.log("localStorage parsing error")}}function o(){const t=localStorage.getItem("queue");try{const a=t?JSON.parse(t):[];a.push(e.obj);const n=JSON.stringify(a);localStorage.setItem("queue",n)}catch(e){console.log("localStorage parsing error")}}function l(e){const a=e.map((({genres:e,original_title:t,poster_path:a,vote_average:n})=>{let s=e.map((e=>e.name)),i=n.toFixed(1);return`<li class="gallery-item" data-id="${id}">\n        <div class="gallery-image"><img src="https://image.tmdb.org/t/p/w500${a}" alt="${t}">\n        <h2 class="gallery-item-title">${t}</h2>\n        <span class="gallery-item-prop">${s} | ${year} | ${i}</span></div></li>`})).join("");console.log("markup",a),t.gallery.innerHTML=a}t.w.addEventListener("click",(function(){t.gallery.innerHTML="";const e=localStorage.getItem("watched");try{const t=JSON.parse(e);console.log(t),l(t)}catch(e){console.log("error readWatchedFromStorage")}})),t.q.addEventListener("click",(function(){t.gallery.innerHTML="";const e=localStorage.getItem("queue");try{l(JSON.parse(e))}catch(e){console.log("error readQueueFromStorage")}})),t.form.addEventListener("submit",(async function(a){if(t.gallery.innerHTML="",e.input=a.currentTarget.elements.searchInput.value.trim(),""!==e.input)try{const t=await e.fetchSearch(),a=await e.fetchGenres();n(t,a)}catch(e){console.log(e)}return})),window.addEventListener("DOMContentLoaded",a);
//# sourceMappingURL=index.60a46a0c.js.map
