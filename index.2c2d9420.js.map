{"mappings":"AACA,MAAMA,EAAgB,ICCP,MAMbC,yBACE,MAAMC,QAAiBC,MACrB,iGAA2EC,KAAKC,QAKlF,OAFAD,KAAKE,sBAEQJ,EAASK,OAGxBN,oBAEEO,QAAQC,IAAIL,KAAKM,aACjB,MAAMR,QAAiBC,MACrB,4FAAsEC,KAAKM,oBAAoBN,KAAKC,QAKtG,OAHAG,QAAQC,MACRL,KAAKE,gBACLE,QAAQC,IAAIP,SACCA,EAASK,OAGxBN,oBACE,MAAMC,QAAiBC,MACrB,yGAGF,aAAaD,EAASK,OAGxBN,uBACE,MAAMC,QAAiBC,MACrB,sFAEF,aAAaD,EAASK,OAExBD,gBACEF,KAAKC,MAAQ,EAEfM,YACEP,KAAKC,KAAO,EAGVO,YACF,OAAOR,KAAKM,YAEVE,UAAMC,GACRT,KAAKM,YAAcG,EApDrBC,cACEV,KAAKM,YAAc,GACnBN,KAAKC,KAAO,IDDVU,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,QAASF,SAASC,cAAc,iBAChCE,YAAaH,SAASC,cAAc,kBAatCjB,eAAeoB,IACbrB,EAAcW,YACd,IACE,MAAMT,QAAiBF,EAAcsB,mBAC/BC,QAAuBvB,EAAcwB,cAC3ChB,QAAQC,IAAIP,GACZuB,EAAavB,EAAUqB,GACvB,MAAOG,GACPlB,QAAQC,IAAIiB,IAKhB,SAASD,EAAavB,EAAUqB,GAC9Bf,QAAQC,IAAIP,EAASyB,SACrB,MAAMC,EAAYL,EAAeM,OACjCrB,QAAQC,IAAImB,GAEZ,MAIME,EAFS5B,EAASyB,QAGrBI,KACC,EAACC,GACCA,EAAEC,UACFA,EAASC,eACTA,EAAcC,aACdA,EAAYC,YACZA,EAAWC,aACXA,KAQO,gCAAgCL,oFACuBI,WAAqBF,qDAClDA,mDARfN,EACfU,QAAOC,GAASN,EAAUO,SAASD,EAAMP,MACzCD,KAAIQ,GAASA,EAAME,YACX,IAAIC,KAAKP,GACJQ,mBACLN,EAAaO,QAAQ,yIAUnCC,KAAK,IAER9B,EAAKI,QAAQ2B,UAAYhB,EAwBzBV,YAAcH,SAASC,cAAc,iBACrCE,YAAY2B,iBAAiB,QAASC,GAGxC,SAASA,EAAoBC,GAC3BzC,QAAQC,IAAIwC,GAvFdlC,EAAKC,KAAK+B,iBAAiB,UA8D3B9C,eAA4BgD,GAM1B,GALAA,EAAEC,iBACFnC,EAAKI,QAAQ2B,UAAY,GACzB9C,EAAcY,MAAQqC,EAAEE,cAAcC,SAASC,YAAYC,MAAMC,OAGrC,KAAxBvD,EAAcY,MAChB,IACE,MAAMV,QAAiBF,EAAcwD,cAC/BjC,QAAuBvB,EAAcwB,cAE3CC,EAAavB,EAAUqB,GACvB,MAAOG,GACPlB,QAAQC,IAAIiB,GAGhB,UAxEA+B,OAAOV,iBAAiB,mBAAoB1B","sources":["src/index.js","src/js/api-service.js"],"sourcesContent":["import ApiService from './js/api-service';\nconst newApiService = new ApiService();\n\n//  == refs ==\nconst refs = {\n  form: document.querySelector('.search-form'),\n  gallery: document.querySelector('#gallery-list'),\n  galleryItem: document.querySelector('.gallery-item'),\n};\n\n//   == listeners ==\nrefs.form.addEventListener('submit', inputHandler);\n\n//  == First Load Page ==\nfirstPageLoader();\n\nfunction firstPageLoader() {\n  window.addEventListener('DOMContentLoaded', getTrendingMovie);\n}\n\nasync function getTrendingMovie() {\n  newApiService.resetPage();\n  try {\n    const response = await newApiService.fetchTrendingUrl();\n    const responseGenres = await newApiService.fetchGenres();\n    console.log(response);\n    markupMovies(response, responseGenres);\n  } catch (error) {\n    console.log(error);\n  }\n}\n//  == // First Load Page ==\n\nfunction markupMovies(response, responseGenres) {\n  console.log(response.results);\n  const arrGenres = responseGenres.genres;\n  console.log(arrGenres);\n\n  const imageUrl = 'https://image.tmdb.org/t/p/';\n  const imageSize = 'w500';\n  const movies = response.results;\n\n  const markup = movies\n    .map(\n      ({\n        id,\n        genre_ids,\n        original_title,\n        release_date,\n        poster_path,\n        vote_average,\n      }) => {\n        let genresArray = arrGenres\n          .filter(genre => genre_ids.includes(genre.id))\n          .map(genre => genre.name);\n        let date = new Date(release_date);\n        let year = date.getFullYear();\n        let vote = vote_average.toFixed(1);\n        return `<li class=\"gallery-item\" id=\"${id}\">\n        <div class=\"gallery-image\"><img src=\"${imageUrl}${imageSize}${poster_path}\" alt=\"${original_title}\"></div>\n        <h2 class=\"gallery-item-title\">${original_title}</h2>\n        <span class=\"gallery-item-prop\">${genresArray} | ${year} | ${vote}</span>\n        <button type=\"button\" id=\"watched\">Watched</button>\n<button type=\"button\" id=\"queue\">Queue</button>\n      </li>`;\n      }\n    )\n    .join('');\n\n  refs.gallery.innerHTML = markup;\n  addGalleryItemListener();\n}\n\nasync function inputHandler(e) {\n  e.preventDefault();\n  refs.gallery.innerHTML = '';\n  newApiService.input = e.currentTarget.elements.searchInput.value.trim();\n  // console.log(newApiService.input);\n  // newApiService.resetPage();\n  if (newApiService.input !== '') {\n    try {\n      const response = await newApiService.fetchSearch();\n      const responseGenres = await newApiService.fetchGenres();\n      // console.log(response);\n      markupMovies(response, responseGenres);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return;\n}\n\nfunction addGalleryItemListener() {\n  galleryItem = document.querySelector('.gallery-item');\n  galleryItem.addEventListener('click', galleryItemListener);\n}\n\nfunction galleryItemListener(e) {\n  console.log(e);\n}\n","const API_KEY = '83cba2c85d0df477852b094af9fbdddb';\n\nexport default class ApiService {\n  constructor() {\n    this.searchValue = '';\n    this.page = 1;\n  }\n\n  async fetchTrendingUrl() {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=${this.page}`\n    );\n\n    this.incrementPage();\n\n    return await response.json();\n  }\n\n  async fetchSearch() {\n    // this.resetPage();\n    console.log(this.searchValue);\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${this.searchValue}&page=${this.page}`\n    );\n    console.log();\n    this.incrementPage();\n    console.log(response);\n    return await response.json();\n  }\n\n  async fetchGenres() {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log('fetchGenres', response);\n    return await response.json();\n  }\n  // id подставлен статически временно\n  async fetchMovieById() {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/157336?api_key=${API_KEY}`\n    );\n    return await response.json();\n  }\n  incrementPage() {\n    this.page += 1;\n  }\n  resetPage() {\n    this.page = 1;\n  }\n\n  get input() {\n    return this.searchValue;\n  }\n  set input(newSearchValue) {\n    this.searchValue = newSearchValue;\n  }\n}\n"],"names":["$1f0dc3b9307be026$var$newApiService","async","response","fetch","this","page","incrementPage","json","console","log","searchValue","resetPage","input","newSearchValue","constructor","$1f0dc3b9307be026$var$refs","form","document","querySelector","gallery","galleryItem","$1f0dc3b9307be026$var$getTrendingMovie","fetchTrendingUrl","responseGenres","fetchGenres","$1f0dc3b9307be026$var$markupMovies","error","results","arrGenres","genres","markup","map","id","genre_ids","original_title","release_date","poster_path","vote_average","filter","genre","includes","name","Date","getFullYear","toFixed","join","innerHTML","addEventListener","$1f0dc3b9307be026$var$galleryItemListener","e","preventDefault","currentTarget","elements","searchInput","value","trim","fetchSearch","window"],"version":3,"file":"index.2c2d9420.js.map"}